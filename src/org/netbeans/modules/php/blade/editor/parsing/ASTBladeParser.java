
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sat Mar 05 07:07:23 EET 2022
//----------------------------------------------------

package org.netbeans.modules.php.blade.editor.parsing;

import java.util.*;
import org.netbeans.modules.csl.api.OffsetRange;
import org.openide.util.Pair;
import org.netbeans.modules.php.blade.editor.parsing.astnodes.*;
import org.netbeans.modules.php.editor.parser.ParserErrorHandler;
import org.netbeans.modules.php.editor.parser.astnodes.Program;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sat Mar 05 07:07:23 EET 2022
  */
public class ASTBladeParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public ASTBladeParser() {super();}

  /** Constructor which sets the default scanner. */
  public ASTBladeParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ASTBladeParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\063\000\002\003\003\000\002\002\004\000\002\004" +
    "\004\000\002\004\002\000\002\010\004\000\002\010\002" +
    "\000\002\006\003\000\002\007\003\000\002\007\004\000" +
    "\002\007\010\000\002\007\006\000\002\007\010\000\002" +
    "\007\006\000\002\007\010\000\002\007\006\000\002\007" +
    "\006\000\002\007\007\000\002\007\006\000\002\007\010" +
    "\000\002\007\006\000\002\007\003\000\002\007\005\000" +
    "\002\007\003\000\002\007\003\000\002\007\003\000\002" +
    "\007\003\000\002\007\003\000\002\007\003\000\002\007" +
    "\003\000\002\020\003\000\002\022\010\000\002\022\006" +
    "\000\002\002\003\000\002\002\003\000\002\002\003\000" +
    "\002\002\003\000\002\002\003\000\002\013\005\000\002" +
    "\014\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\005\000\002\005\004\000\002\005\002" +
    "\000\002\011\005\000\002\012\003\000\002\012\003\000" +
    "\002\012\003\000\002\017\002\000\002\017\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\141\000\050\002\ufffe\003\ufffe\004\ufffe\005\ufffe\006" +
    "\ufffe\007\ufffe\011\ufffe\012\ufffe\013\ufffe\021\ufffe\022\ufffe" +
    "\023\ufffe\025\ufffe\027\ufffe\030\ufffe\033\ufffe\035\ufffe\042" +
    "\ufffe\045\ufffe\001\002\000\004\002\143\001\002\000\050" +
    "\002\001\003\026\004\013\005\015\006\032\007\012\011" +
    "\021\012\030\013\016\021\014\022\024\023\020\025\033" +
    "\027\006\030\007\033\031\035\011\042\027\045\017\001" +
    "\002\000\004\040\134\001\002\000\004\040\131\001\002" +
    "\000\074\002\ufffb\003\ufffb\004\ufffb\005\ufffb\006\ufffb\007" +
    "\ufffb\011\ufffb\012\ufffb\013\ufffb\014\ufffb\015\ufffb\016\ufffb" +
    "\017\ufffb\020\ufffb\021\ufffb\022\ufffb\023\ufffb\024\ufffb\025" +
    "\ufffb\026\ufffb\027\ufffb\030\ufffb\031\ufffb\032\ufffb\033\ufffb" +
    "\034\ufffb\035\ufffb\042\ufffb\045\ufffb\001\002\000\076\002" +
    "\uffed\003\uffed\004\uffed\005\uffed\006\uffed\007\uffed\011\uffed" +
    "\012\uffed\013\uffed\014\uffed\015\uffed\016\uffed\017\uffed\020" +
    "\uffed\021\uffed\022\uffed\023\uffed\024\uffed\025\uffed\026\uffed" +
    "\027\uffed\030\uffed\031\uffed\032\uffed\033\uffed\034\uffed\035" +
    "\uffed\042\uffed\045\uffed\046\126\001\002\000\004\037\124" +
    "\001\002\000\074\002\uffeb\003\uffeb\004\uffeb\005\uffeb\006" +
    "\uffeb\007\uffeb\011\uffeb\012\uffeb\013\uffeb\014\uffeb\015\uffeb" +
    "\016\uffeb\017\uffeb\020\uffeb\021\uffeb\022\uffeb\023\uffeb\024" +
    "\uffeb\025\uffeb\026\uffeb\027\uffeb\030\uffeb\031\uffeb\032\uffeb" +
    "\033\uffeb\034\uffeb\035\uffeb\042\uffeb\045\uffeb\001\002\000" +
    "\004\046\111\001\002\000\074\002\uffea\003\uffea\004\uffea" +
    "\005\uffea\006\uffea\007\uffea\011\uffea\012\uffea\013\uffea\014" +
    "\uffea\015\uffea\016\uffea\017\uffea\020\uffea\021\uffea\022\uffea" +
    "\023\uffea\024\uffea\025\uffea\026\uffea\027\uffea\030\uffea\031" +
    "\uffea\032\uffea\033\uffea\034\uffea\035\uffea\042\uffea\045\uffea" +
    "\001\002\000\004\046\073\001\002\000\074\002\uffe7\003" +
    "\uffe7\004\uffe7\005\uffe7\006\uffe7\007\uffe7\011\uffe7\012\uffe7" +
    "\013\uffe7\014\uffe7\015\uffe7\016\uffe7\017\uffe7\020\uffe7\021" +
    "\uffe7\022\uffe7\023\uffe7\024\uffe7\025\uffe7\026\uffe7\027\uffe7" +
    "\030\uffe7\031\uffe7\032\uffe7\033\uffe7\034\uffe7\035\uffe7\042" +
    "\uffe7\045\uffe7\001\002\000\004\036\070\001\002\000\074" +
    "\002\uffe9\003\uffe9\004\uffe9\005\uffe9\006\uffe9\007\uffe9\011" +
    "\uffe9\012\uffe9\013\uffe9\014\uffe9\015\uffe9\016\uffe9\017\uffe9" +
    "\020\uffe9\021\uffe9\022\uffe9\023\uffe9\024\uffe9\025\uffe9\026" +
    "\uffe9\027\uffe9\030\uffe9\031\uffe9\032\uffe9\033\uffe9\034\uffe9" +
    "\035\uffe9\042\uffe9\045\uffe9\001\002\000\050\002\uffff\003" +
    "\uffff\004\uffff\005\uffff\006\uffff\007\uffff\011\uffff\012\uffff" +
    "\013\uffff\021\uffff\022\uffff\023\uffff\025\uffff\027\uffff\030" +
    "\uffff\033\uffff\035\uffff\042\uffff\045\uffff\001\002\000\074" +
    "\002\ufffa\003\ufffa\004\ufffa\005\ufffa\006\ufffa\007\ufffa\011" +
    "\ufffa\012\ufffa\013\ufffa\014\ufffa\015\ufffa\016\ufffa\017\ufffa" +
    "\020\ufffa\021\ufffa\022\ufffa\023\ufffa\024\ufffa\025\ufffa\026" +
    "\ufffa\027\ufffa\030\ufffa\031\ufffa\032\ufffa\033\ufffa\034\ufffa" +
    "\035\ufffa\042\ufffa\045\ufffa\001\002\000\004\046\061\001" +
    "\002\000\074\002\uffe4\003\uffe4\004\uffe4\005\uffe4\006\uffe4" +
    "\007\uffe4\011\uffe4\012\uffe4\013\uffe4\014\uffe4\015\uffe4\016" +
    "\uffe4\017\uffe4\020\uffe4\021\uffe4\022\uffe4\023\uffe4\024\uffe4" +
    "\025\uffe4\026\uffe4\027\uffe4\030\uffe4\031\uffe4\032\uffe4\033" +
    "\uffe4\034\uffe4\035\uffe4\042\uffe4\045\uffe4\001\002\000\074" +
    "\002\uffe5\003\uffe5\004\uffe5\005\uffe5\006\uffe5\007\uffe5\011" +
    "\uffe5\012\uffe5\013\uffe5\014\uffe5\015\uffe5\016\uffe5\017\uffe5" +
    "\020\uffe5\021\uffe5\022\uffe5\023\uffe5\024\uffe5\025\uffe5\026" +
    "\uffe5\027\uffe5\030\uffe5\031\uffe5\032\uffe5\033\uffe5\034\uffe5" +
    "\035\uffe5\042\uffe5\045\uffe5\001\002\000\074\002\uffe8\003" +
    "\uffe8\004\uffe8\005\uffe8\006\uffe8\007\uffe8\011\uffe8\012\uffe8" +
    "\013\uffe8\014\uffe8\015\uffe8\016\uffe8\017\uffe8\020\uffe8\021" +
    "\uffe8\022\uffe8\023\uffe8\024\uffe8\025\uffe8\026\uffe8\027\uffe8" +
    "\030\uffe8\031\uffe8\032\uffe8\033\uffe8\034\uffe8\035\uffe8\042" +
    "\uffe8\045\uffe8\001\002\000\004\046\045\001\002\000\004" +
    "\046\040\001\002\000\074\002\uffe6\003\uffe6\004\uffe6\005" +
    "\uffe6\006\uffe6\007\uffe6\011\uffe6\012\uffe6\013\uffe6\014\uffe6" +
    "\015\uffe6\016\uffe6\017\uffe6\020\uffe6\021\uffe6\022\uffe6\023" +
    "\uffe6\024\uffe6\025\uffe6\026\uffe6\027\uffe6\030\uffe6\031\uffe6" +
    "\032\uffe6\033\uffe6\034\uffe6\035\uffe6\042\uffe6\045\uffe6\001" +
    "\002\000\004\036\034\001\002\000\050\003\ufffc\004\ufffc" +
    "\005\ufffc\006\ufffc\007\ufffc\011\ufffc\012\ufffc\013\ufffc\021" +
    "\ufffc\022\ufffc\023\ufffc\025\ufffc\026\ufffc\027\ufffc\030\ufffc" +
    "\033\ufffc\035\ufffc\042\ufffc\045\ufffc\001\002\000\050\003" +
    "\026\004\013\005\015\006\032\007\012\011\021\012\030" +
    "\013\016\021\014\022\024\023\020\025\033\026\037\027" +
    "\006\030\007\033\031\035\011\042\027\045\017\001\002" +
    "\000\072\003\ufffd\004\ufffd\005\ufffd\006\ufffd\007\ufffd\011" +
    "\ufffd\012\ufffd\013\ufffd\014\ufffd\015\ufffd\016\ufffd\017\ufffd" +
    "\020\ufffd\021\ufffd\022\ufffd\023\ufffd\024\ufffd\025\ufffd\026" +
    "\ufffd\027\ufffd\030\ufffd\031\ufffd\032\ufffd\033\ufffd\034\ufffd" +
    "\035\ufffd\042\ufffd\045\ufffd\001\002\000\074\002\ufff2\003" +
    "\ufff2\004\ufff2\005\ufff2\006\ufff2\007\ufff2\011\ufff2\012\ufff2" +
    "\013\ufff2\014\ufff2\015\ufff2\016\ufff2\017\ufff2\020\ufff2\021" +
    "\ufff2\022\ufff2\023\ufff2\024\ufff2\025\ufff2\026\ufff2\027\ufff2" +
    "\030\ufff2\031\ufff2\032\ufff2\033\ufff2\034\ufff2\035\ufff2\042" +
    "\ufff2\045\ufff2\001\002\000\004\041\041\001\002\000\004" +
    "\047\042\001\002\000\050\003\ufffc\004\ufffc\005\ufffc\006" +
    "\ufffc\007\ufffc\011\ufffc\012\ufffc\013\ufffc\021\ufffc\022\ufffc" +
    "\023\ufffc\025\ufffc\027\ufffc\030\ufffc\033\ufffc\034\ufffc\035" +
    "\ufffc\042\ufffc\045\ufffc\001\002\000\050\003\026\004\013" +
    "\005\015\006\032\007\012\011\021\012\030\013\016\021" +
    "\014\022\024\023\020\025\033\027\006\030\007\033\031" +
    "\034\044\035\011\042\027\045\017\001\002\000\074\002" +
    "\uffef\003\uffef\004\uffef\005\uffef\006\uffef\007\uffef\011\uffef" +
    "\012\uffef\013\uffef\014\uffef\015\uffef\016\uffef\017\uffef\020" +
    "\uffef\021\uffef\022\uffef\023\uffef\024\uffef\025\uffef\026\uffef" +
    "\027\uffef\030\uffef\031\uffef\032\uffef\033\uffef\034\uffef\035" +
    "\uffef\042\uffef\045\uffef\001\002\000\014\041\uffd5\042\uffd5" +
    "\043\uffd5\044\uffd5\047\uffd5\001\002\000\014\041\052\042" +
    "\054\043\053\044\050\047\047\001\002\000\074\002\ufff5" +
    "\003\ufff5\004\ufff5\005\ufff5\006\ufff5\007\ufff5\011\ufff5\012" +
    "\ufff5\013\ufff5\014\ufff5\015\ufff5\016\ufff5\017\ufff5\020\ufff5" +
    "\021\ufff5\022\ufff5\023\ufff5\024\ufff5\025\ufff5\026\ufff5\027" +
    "\ufff5\030\ufff5\031\ufff5\032\ufff5\033\ufff5\034\ufff5\035\ufff5" +
    "\042\ufff5\045\ufff5\001\002\000\004\041\057\001\002\000" +
    "\016\041\uffd6\042\uffd6\043\uffd6\044\uffd6\045\055\047\uffd6" +
    "\001\002\000\016\041\uffd8\042\uffd8\043\uffd8\044\uffd8\045" +
    "\uffd8\047\uffd8\001\002\000\016\041\uffda\042\uffda\043\uffda" +
    "\044\uffda\045\uffda\047\uffda\001\002\000\016\041\uffd9\042" +
    "\uffd9\043\uffd9\044\uffd9\045\uffd9\047\uffd9\001\002\000\010" +
    "\041\052\042\054\043\053\001\002\000\016\041\uffd7\042" +
    "\uffd7\043\uffd7\044\uffd7\045\uffd7\047\uffd7\001\002\000\004" +
    "\047\060\001\002\000\074\002\ufff4\003\ufff4\004\ufff4\005" +
    "\ufff4\006\ufff4\007\ufff4\011\ufff4\012\ufff4\013\ufff4\014\ufff4" +
    "\015\ufff4\016\ufff4\017\ufff4\020\ufff4\021\ufff4\022\ufff4\023" +
    "\ufff4\024\ufff4\025\ufff4\026\ufff4\027\ufff4\030\ufff4\031\ufff4" +
    "\032\ufff4\033\ufff4\034\ufff4\035\ufff4\042\ufff4\045\ufff4\001" +
    "\002\000\004\042\062\001\002\000\006\044\uffdb\047\uffdb" +
    "\001\002\000\006\044\065\047\064\001\002\000\074\002" +
    "\ufff7\003\ufff7\004\ufff7\005\ufff7\006\ufff7\007\ufff7\011\ufff7" +
    "\012\ufff7\013\ufff7\014\ufff7\015\ufff7\016\ufff7\017\ufff7\020" +
    "\ufff7\021\ufff7\022\ufff7\023\ufff7\024\ufff7\025\ufff7\026\ufff7" +
    "\027\ufff7\030\ufff7\031\ufff7\032\ufff7\033\ufff7\034\ufff7\035" +
    "\ufff7\042\ufff7\045\ufff7\001\002\000\004\041\066\001\002" +
    "\000\004\047\067\001\002\000\074\002\ufff6\003\ufff6\004" +
    "\ufff6\005\ufff6\006\ufff6\007\ufff6\011\ufff6\012\ufff6\013\ufff6" +
    "\014\ufff6\015\ufff6\016\ufff6\017\ufff6\020\ufff6\021\ufff6\022" +
    "\ufff6\023\ufff6\024\ufff6\025\ufff6\026\ufff6\027\ufff6\030\ufff6" +
    "\031\ufff6\032\ufff6\033\ufff6\034\ufff6\035\ufff6\042\ufff6\045" +
    "\ufff6\001\002\000\050\003\ufffc\004\ufffc\005\ufffc\006\ufffc" +
    "\007\ufffc\011\ufffc\012\ufffc\013\ufffc\021\ufffc\022\ufffc\023" +
    "\ufffc\024\ufffc\025\ufffc\027\ufffc\030\ufffc\033\ufffc\035\ufffc" +
    "\042\ufffc\045\ufffc\001\002\000\050\003\026\004\013\005" +
    "\015\006\032\007\012\011\021\012\030\013\016\021\014" +
    "\022\024\023\020\024\072\025\033\027\006\030\007\033" +
    "\031\035\011\042\027\045\017\001\002\000\074\002\ufff3" +
    "\003\ufff3\004\ufff3\005\ufff3\006\ufff3\007\ufff3\011\ufff3\012" +
    "\ufff3\013\ufff3\014\ufff3\015\ufff3\016\ufff3\017\ufff3\020\ufff3" +
    "\021\ufff3\022\ufff3\023\ufff3\024\ufff3\025\ufff3\026\ufff3\027" +
    "\ufff3\030\ufff3\031\ufff3\032\ufff3\033\ufff3\034\ufff3\035\ufff3" +
    "\042\ufff3\045\ufff3\001\002\000\004\042\062\001\002\000" +
    "\060\003\ufffc\004\ufffc\005\ufffc\006\ufffc\007\ufffc\011\ufffc" +
    "\012\ufffc\013\ufffc\014\ufffc\015\ufffc\016\ufffc\017\ufffc\020" +
    "\ufffc\021\ufffc\022\ufffc\023\ufffc\025\ufffc\027\ufffc\030\ufffc" +
    "\033\ufffc\035\ufffc\042\ufffc\045\ufffc\001\002\000\060\003" +
    "\026\004\013\005\015\006\032\007\012\011\021\012\030" +
    "\013\016\014\100\015\103\016\077\017\102\020\076\021" +
    "\014\022\024\023\020\025\033\027\006\030\007\033\031" +
    "\035\011\042\027\045\017\001\002\000\074\002\uffe0\003" +
    "\uffe0\004\uffe0\005\uffe0\006\uffe0\007\uffe0\011\uffe0\012\uffe0" +
    "\013\uffe0\014\uffe0\015\uffe0\016\uffe0\017\uffe0\020\uffe0\021" +
    "\uffe0\022\uffe0\023\uffe0\024\uffe0\025\uffe0\026\uffe0\027\uffe0" +
    "\030\uffe0\031\uffe0\032\uffe0\033\uffe0\034\uffe0\035\uffe0\042" +
    "\uffe0\045\uffe0\001\002\000\074\002\uffdd\003\uffdd\004\uffdd" +
    "\005\uffdd\006\uffdd\007\uffdd\011\uffdd\012\uffdd\013\uffdd\014" +
    "\uffdd\015\uffdd\016\uffdd\017\uffdd\020\uffdd\021\uffdd\022\uffdd" +
    "\023\uffdd\024\uffdd\025\uffdd\026\uffdd\027\uffdd\030\uffdd\031" +
    "\uffdd\032\uffdd\033\uffdd\034\uffdd\035\uffdd\042\uffdd\045\uffdd" +
    "\001\002\000\074\002\uffe1\003\uffe1\004\uffe1\005\uffe1\006" +
    "\uffe1\007\uffe1\011\uffe1\012\uffe1\013\uffe1\014\uffe1\015\uffe1" +
    "\016\uffe1\017\uffe1\020\uffe1\021\uffe1\022\uffe1\023\uffe1\024" +
    "\uffe1\025\uffe1\026\uffe1\027\uffe1\030\uffe1\031\uffe1\032\uffe1" +
    "\033\uffe1\034\uffe1\035\uffe1\042\uffe1\045\uffe1\001\002\000" +
    "\074\002\uffe2\003\uffe2\004\uffe2\005\uffe2\006\uffe2\007\uffe2" +
    "\011\uffe2\012\uffe2\013\uffe2\014\uffe2\015\uffe2\016\uffe2\017" +
    "\uffe2\020\uffe2\021\uffe2\022\uffe2\023\uffe2\024\uffe2\025\uffe2" +
    "\026\uffe2\027\uffe2\030\uffe2\031\uffe2\032\uffe2\033\uffe2\034" +
    "\uffe2\035\uffe2\042\uffe2\045\uffe2\001\002\000\074\002\uffde" +
    "\003\uffde\004\uffde\005\uffde\006\uffde\007\uffde\011\uffde\012" +
    "\uffde\013\uffde\014\uffde\015\uffde\016\uffde\017\uffde\020\uffde" +
    "\021\uffde\022\uffde\023\uffde\024\uffde\025\uffde\026\uffde\027" +
    "\uffde\030\uffde\031\uffde\032\uffde\033\uffde\034\uffde\035\uffde" +
    "\042\uffde\045\uffde\001\002\000\074\002\uffdf\003\uffdf\004" +
    "\uffdf\005\uffdf\006\uffdf\007\uffdf\011\uffdf\012\uffdf\013\uffdf" +
    "\014\uffdf\015\uffdf\016\uffdf\017\uffdf\020\uffdf\021\uffdf\022" +
    "\uffdf\023\uffdf\024\uffdf\025\uffdf\026\uffdf\027\uffdf\030\uffdf" +
    "\031\uffdf\032\uffdf\033\uffdf\034\uffdf\035\uffdf\042\uffdf\045" +
    "\uffdf\001\002\000\006\044\106\047\105\001\002\000\060" +
    "\003\uffdc\004\uffdc\005\uffdc\006\uffdc\007\uffdc\011\uffdc\012" +
    "\uffdc\013\uffdc\014\uffdc\015\uffdc\016\uffdc\017\uffdc\020\uffdc" +
    "\021\uffdc\022\uffdc\023\uffdc\025\uffdc\027\uffdc\030\uffdc\033" +
    "\uffdc\035\uffdc\042\uffdc\045\uffdc\001\002\000\004\041\107" +
    "\001\002\000\004\047\110\001\002\000\074\002\uffe3\003" +
    "\uffe3\004\uffe3\005\uffe3\006\uffe3\007\uffe3\011\uffe3\012\uffe3" +
    "\013\uffe3\014\uffe3\015\uffe3\016\uffe3\017\uffe3\020\uffe3\021" +
    "\uffe3\022\uffe3\023\uffe3\024\uffe3\025\uffe3\026\uffe3\027\uffe3" +
    "\030\uffe3\031\uffe3\032\uffe3\033\uffe3\034\uffe3\035\uffe3\042" +
    "\uffe3\045\uffe3\001\002\000\012\003\115\041\113\042\116" +
    "\043\053\001\002\000\074\002\ufff9\003\ufff9\004\ufff9\005" +
    "\ufff9\006\ufff9\007\ufff9\011\ufff9\012\ufff9\013\ufff9\014\ufff9" +
    "\015\ufff9\016\ufff9\017\ufff9\020\ufff9\021\ufff9\022\ufff9\023" +
    "\ufff9\024\ufff9\025\ufff9\026\ufff9\027\ufff9\030\ufff9\031\ufff9" +
    "\032\ufff9\033\ufff9\034\ufff9\035\ufff9\042\ufff9\045\ufff9\001" +
    "\002\000\010\044\uffd8\045\uffd8\047\uffd2\001\002\000\006" +
    "\044\121\045\055\001\002\000\004\047\uffd1\001\002\000" +
    "\010\044\uffd9\045\uffd9\047\uffd3\001\002\000\004\047\120" +
    "\001\002\000\074\002\uffd4\003\uffd4\004\uffd4\005\uffd4\006" +
    "\uffd4\007\uffd4\011\uffd4\012\uffd4\013\uffd4\014\uffd4\015\uffd4" +
    "\016\uffd4\017\uffd4\020\uffd4\021\uffd4\022\uffd4\023\uffd4\024" +
    "\uffd4\025\uffd4\026\uffd4\027\uffd4\030\uffd4\031\uffd4\032\uffd4" +
    "\033\uffd4\034\uffd4\035\uffd4\042\uffd4\045\uffd4\001\002\000" +
    "\004\041\122\001\002\000\004\047\123\001\002\000\074" +
    "\002\ufff8\003\ufff8\004\ufff8\005\ufff8\006\ufff8\007\ufff8\011" +
    "\ufff8\012\ufff8\013\ufff8\014\ufff8\015\ufff8\016\ufff8\017\ufff8" +
    "\020\ufff8\021\ufff8\022\ufff8\023\ufff8\024\ufff8\025\ufff8\026" +
    "\ufff8\027\ufff8\030\ufff8\031\ufff8\032\ufff8\033\ufff8\034\ufff8" +
    "\035\ufff8\042\ufff8\045\ufff8\001\002\000\004\010\125\001" +
    "\002\000\074\002\uffec\003\uffec\004\uffec\005\uffec\006\uffec" +
    "\007\uffec\011\uffec\012\uffec\013\uffec\014\uffec\015\uffec\016" +
    "\uffec\017\uffec\020\uffec\021\uffec\022\uffec\023\uffec\024\uffec" +
    "\025\uffec\026\uffec\027\uffec\030\uffec\031\uffec\032\uffec\033" +
    "\uffec\034\uffec\035\uffec\042\uffec\045\uffec\001\002\000\004" +
    "\041\127\001\002\000\004\047\130\001\002\000\074\002" +
    "\uffee\003\uffee\004\uffee\005\uffee\006\uffee\007\uffee\011\uffee" +
    "\012\uffee\013\uffee\014\uffee\015\uffee\016\uffee\017\uffee\020" +
    "\uffee\021\uffee\022\uffee\023\uffee\024\uffee\025\uffee\026\uffee" +
    "\027\uffee\030\uffee\031\uffee\032\uffee\033\uffee\034\uffee\035" +
    "\uffee\042\uffee\045\uffee\001\002\000\050\003\ufffc\004\ufffc" +
    "\005\ufffc\006\ufffc\007\ufffc\011\ufffc\012\ufffc\013\ufffc\021" +
    "\ufffc\022\ufffc\023\ufffc\025\ufffc\027\ufffc\030\ufffc\032\ufffc" +
    "\033\ufffc\035\ufffc\042\ufffc\045\ufffc\001\002\000\050\003" +
    "\026\004\013\005\015\006\032\007\012\011\021\012\030" +
    "\013\016\021\014\022\024\023\020\025\033\027\006\030" +
    "\007\032\133\033\031\035\011\042\027\045\017\001\002" +
    "\000\074\002\ufff0\003\ufff0\004\ufff0\005\ufff0\006\ufff0\007" +
    "\ufff0\011\ufff0\012\ufff0\013\ufff0\014\ufff0\015\ufff0\016\ufff0" +
    "\017\ufff0\020\ufff0\021\ufff0\022\ufff0\023\ufff0\024\ufff0\025" +
    "\ufff0\026\ufff0\027\ufff0\030\ufff0\031\ufff0\032\ufff0\033\ufff0" +
    "\034\ufff0\035\ufff0\042\ufff0\045\ufff0\001\002\000\052\003" +
    "\ufffc\004\ufffc\005\ufffc\006\ufffc\007\ufffc\011\ufffc\012\ufffc" +
    "\013\ufffc\021\ufffc\022\ufffc\023\ufffc\025\ufffc\027\ufffc\030" +
    "\ufffc\031\ufffc\032\ufffc\033\ufffc\035\ufffc\042\ufffc\045\ufffc" +
    "\001\002\000\052\003\026\004\013\005\015\006\032\007" +
    "\012\011\021\012\030\013\016\021\014\022\024\023\020" +
    "\025\033\027\006\030\007\031\uffd0\032\uffd0\033\031\035" +
    "\011\042\027\045\017\001\002\000\006\031\137\032\140" +
    "\001\002\000\004\040\141\001\002\000\074\002\ufff1\003" +
    "\ufff1\004\ufff1\005\ufff1\006\ufff1\007\ufff1\011\ufff1\012\ufff1" +
    "\013\ufff1\014\ufff1\015\ufff1\016\ufff1\017\ufff1\020\ufff1\021" +
    "\ufff1\022\ufff1\023\ufff1\024\ufff1\025\ufff1\026\ufff1\027\ufff1" +
    "\030\ufff1\031\ufff1\032\ufff1\033\ufff1\034\ufff1\035\ufff1\042" +
    "\ufff1\045\ufff1\001\002\000\052\003\ufffc\004\ufffc\005\ufffc" +
    "\006\ufffc\007\ufffc\011\ufffc\012\ufffc\013\ufffc\021\ufffc\022" +
    "\ufffc\023\ufffc\025\ufffc\027\ufffc\030\ufffc\031\ufffc\032\ufffc" +
    "\033\ufffc\035\ufffc\042\ufffc\045\ufffc\001\002\000\052\003" +
    "\026\004\013\005\015\006\032\007\012\011\021\012\030" +
    "\013\016\021\014\022\024\023\020\025\033\027\006\030" +
    "\007\031\uffcf\032\uffcf\033\031\035\011\042\027\045\017" +
    "\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\141\000\006\003\003\004\004\001\001\000\002\001" +
    "\001\000\012\006\021\007\007\020\022\022\024\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\011\111\001\001\000\002\001\001\000\004\013\073\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\010\034\001\001\000\012\006\035\007\007" +
    "\020\022\022\024\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\010\042" +
    "\001\001\000\012\006\035\007\007\020\022\022\024\001" +
    "\001\000\002\001\001\000\004\005\045\001\001\000\004" +
    "\015\050\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\015\055\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\014\062\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\070\001\001\000\012\006\035\007\007\020\022\022" +
    "\024\001\001\000\002\001\001\000\004\014\103\001\001" +
    "\000\004\010\074\001\001\000\014\002\100\006\035\007" +
    "\007\020\022\022\024\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\012\116\015\113\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\010\131\001\001\000\012\006\035\007" +
    "\007\020\022\022\024\001\001\000\002\001\001\000\004" +
    "\010\134\001\001\000\014\006\035\007\007\017\135\020" +
    "\022\022\024\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\010\141\001\001\000\012\006" +
    "\035\007\007\020\022\022\024\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ASTBladeParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ASTBladeParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ASTBladeParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    private ErrorStrategy defaultStrategy = new DefaultErrorStrategy();;
    private ErrorStrategy errorStrategy = defaultStrategy;

    private String fileName = null;
    private ParserErrorHandler errorHandler = null;

    public void setErrorHandler (ParserErrorHandler handler) {
        this.errorHandler = handler;
    }

    public ParserErrorHandler getErrorHandler () {
        return this.errorHandler;
    }

    public String getFileName() {
        return fileName;
    }

    public void setFileName(String fileName) {
        assert fileName != null;
        this.fileName = fileName;
    }


    interface ErrorStrategy {
        public boolean errorRecovery(boolean debug) throws Exception;
    }

    class DefaultErrorStrategy implements ErrorStrategy {

        public boolean errorRecovery(boolean debug) throws Exception {
            return ASTBladeParser.super.error_recovery(debug);
        }
    }

    /**
     * Attempt to recover from a syntax error.  This returns false if recovery fails,
     * true if it succeeds.
     * @param debug should we produce debugging messages as we parse.
     */
    protected boolean error_recovery(boolean debug) throws java.lang.Exception {
        return errorStrategy.errorRecovery(debug);
    }

    /**
     * Report a non fatal error (or warning).  This method takes a message
     * string and an additional object (to be used by specializations implemented in subclasses).
     * The super class prints the message to System.err.
     * @param message an error message.
     * @param info    an extra object reserved for use by specialized subclasses.
     */
    public void report_error(String message, Object info) {
        System.out.print("report_eror"  + message);
    }

    /**
     * This method is called when a syntax error has been detected and recovery is about to be invoked.
     * The super class just emit a "Syntax error" error message.
     * @param cur_token the current lookahead Symbol.
     */
    public void syntax_error(java_cup.runtime.Symbol cur_token) {
        java_cup.runtime.Symbol symbol = (java_cup.runtime.Symbol)stack.peek();
        int state = symbol.parse_state;
        short[] rowOfProbe = action_tab[state];
        if (errorHandler != null) {
            errorHandler.handleError(ParserErrorHandler.Type.SYNTAX_ERROR, rowOfProbe, cur_token, symbol);
        }
     }

    /**
     * Report a fatal error.  This method takes a message string and an additional object
     * (to be used by specializations implemented in subclasses).
     * The super class reports the error then throws an exception.
     * @param message an error message.
     * @param info    an extra object reserved for use by specialized subclasses.
     */
    public void report_fatal_error(String message, Object info) throws Exception {
        if (errorHandler != null) {
            errorHandler.handleError(ParserErrorHandler.Type.FATAL_PARSER_ERROR, null, cur_token, null);
        }
    }

    protected int error_sync_size() {
        return 1;
    }

}

